{"version":3,"sources":["components/Project.js","components/ProjectList.js","App.js","i18n/i18n.js","index.js"],"names":["useClient1Styles","makeStyles","root","width","height","display","flexDirection","justifyContent","header","textAlign","card","alignItems","position","top","bottom","left","right","margin","backgroundColor","title","fontSize","link","marginLeft","textDecoration","color","logo","text","padding","useClient2Styles","pos","marginBottom","query","gql","Project","location","client","state","id","useQuery","variables","loading","data","client1Classes","client2Classes","classes","useTranslation","t","i18n","className","to","Card","project","CardContent","Typography","user","first_name","last_name","status","collected","target","displayName","theme","palette","background","paper","list","block","item","border","borderWidth","borderColor","borderRadius","ProjectList","process","projects","length","map","index","pathname","ListItem","App","basename","path","exact","component","use","initReactI18next","init","resources","en","translation","fr","lng","keySeparator","interpolation","escapeValue","ApolloClient","HttpLink","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"unBAYA,IAAMA,EAAmBC,YAAW,CAChCC,KAAM,CACFC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,UAEpBC,OAAQ,CACJC,UAAW,UAEfC,KAAM,CACFL,QAAS,OACTF,MAAO,IACPI,eAAgB,SAChBD,cAAe,SACfK,WAAY,SACZP,OAAQ,IACRQ,SAAU,WACVC,IAAI,EACJC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRC,gBAAiB,oBAErBC,MAAO,CACHC,SAAU,GACVX,UAAW,UAEfY,KAAM,CACFC,WAAY,MACZC,eAAgB,OAChBC,MAAO,SAEXC,KAAM,CACFpB,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBI,WAAY,UAEhBe,KAAM,CACFN,SAAU,GACVO,QAAS,EACTV,OAAQ,KAIVW,EAAmB3B,YAAW,CAChCC,KAAM,CACFC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,UAEpBC,OAAQ,CACJC,UAAW,UAEfC,KAAM,CACFL,QAAS,OACTE,eAAgB,SAChBD,cAAe,SACfK,WAAY,SACZR,MAAO,IACPC,OAAQ,IACRQ,SAAU,WACVC,IAAI,EACJC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,OAAQ,OACRC,gBAAiB,aAErBC,MAAO,CACHC,SAAU,GACVX,UAAW,UAEfY,KAAM,CACFC,WAAY,MACZC,eAAgB,OAChBC,MAAO,SAEXC,KAAM,CACFpB,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBI,WAAY,SACZM,OAAQ,GAEZS,KAAM,CACFN,SAAU,GACVO,QAAS,EACTV,OAAQ,GAEZY,IAAK,CACDC,aAAc,MAGTC,EAAQC,cAAH,KAiBZC,EAAU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACRC,EAASD,GAAYA,EAASE,OAASF,EAASE,MAAMD,OACtDE,EAAKH,GAAYA,EAASE,OAASF,EAASE,MAAMC,GAF5B,EAGJC,mBAASP,EAAO,CAACQ,UAAW,CAACF,QAA9CG,EAHqB,EAGrBA,QAASC,EAHY,EAGZA,KAEVC,EAAiB1C,IACjB2C,EAAiBf,IAEjBgB,EAAqB,YAAXT,EAAuBO,EAAiBC,EAR5B,EASRE,cAAZC,EAToB,EASpBA,EAToB,EASjBC,KAYX,OACI,sBAAKC,UAAWJ,EAAQ1C,KAAxB,UACI,oBAAI8C,UAAWJ,EAAQpC,OAAvB,SAAgCsC,EAAE,qBAClC,cAAC,IAAD,CAASG,GAAG,IAAID,UAAWJ,EAAQvB,KAAnC,SAA0CyB,EAAE,kBAC5C,eAACI,EAAA,EAAD,CAAMF,UAAWJ,EAAQlC,KAAzB,UACK8B,GAAY,gDACZC,GAAQA,EAAKU,SACV,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYL,UAAWJ,EAAQzB,MAA/B,SACKsB,EAAKU,QAAQhC,QAElB,cAACkC,EAAA,EAAD,CAAYL,UAAWJ,EAAQlB,KAA/B,mBACQoB,EAAE,QADV,aACsBL,EAAKU,QAAQG,KAAKC,WADxC,YACsDd,EAAKU,QAAQG,KAAKE,aAGxE,sBAAKR,UAAWJ,EAAQnB,KAAxB,UACKqB,EAAE,UA1BK,YAAxBL,EAAKU,QAAQM,OACN,cAAC,IAAD,CAAWrC,SAAU,UAEJ,WAAxBqB,EAAKU,QAAQM,OACN,cAAC,IAAD,CAAYrC,SAAU,UAEL,gBAAxBqB,EAAKU,QAAQM,OACN,cAAC,IAAD,CAAoBrC,SAAU,eADzC,KAuBgB,cAACiC,EAAA,EAAD,CAAYL,UAAWJ,EAAQlB,KAA/B,mBACQoB,EAAE,aADV,aAC2BL,EAAKU,QAAQO,UADxC,cACuDjB,EAAKU,QAAQQ,OADpE,sBAWxB1B,EAAQ2B,YAAc,UAEP3B,Q,oTC3Kf,IAAMjC,EAAmBC,aAAW,SAAC4D,GAAD,MAAY,CAC5C3D,KAAM,CACFC,MAAO,OACPe,gBAAiB2C,EAAMC,QAAQC,WAAWC,OAE9CC,KAAM,CACFhD,OAAQ,SACRd,MAAO,QAEX+D,MAAO,CACH7D,QAAS,SAEbc,MAAO,CACHV,UAAW,UAEfY,KAAM,CACFE,eAAgB,OAChBC,MAAO,SAEX2C,KAAM,CACFxC,QAAS,GACTxB,MAAO,IACPe,gBAAiB,mBACjBkD,OAAQ,aACRC,YAAa,GACbC,YAAa,UACbC,aAAc,GAElB9C,KAAM,CACFhB,UAAW,aAIbmB,EAAmB3B,aAAW,SAAC4D,GAAD,MAAY,CAC5C3D,KAAM,CACFC,MAAO,QAEX+D,MAAO,CACH7D,QAAS,gBAEb4D,KAAM,CACFxD,UAAW,UAEfU,MAAO,CACHV,UAAW,UAEfY,KAAM,CACFE,eAAgB,OAChBC,MAAO,SAEX2C,KAAM,CACFxC,QAAS,GACTxB,MAAO,IACPe,gBAAiB,YACjBkD,OAAQ,aACRC,YAAa,GACbC,YAAa,UACbC,aAAc,GAElB9C,KAAM,CACFhB,UAAW,aAINsB,EAAQC,cAAH,KAkBZwC,EAAc,WAChB,IAAMrC,EAASsC,UAGT7B,GAFiB5C,IACA4B,KAHD,EAMEU,mBAASP,GAA1BS,EANe,EAMfA,QAASC,EANM,EAMNA,KANM,EAQFI,cAAZC,EARc,EAQdA,EARc,EAQXC,KAEX,OACI,qBAAKC,UAAU,YAAf,SACI,sBAAKA,UAAWJ,EAAQqB,KAAxB,UACI,oBAAIjB,UAAWJ,EAAQzB,MAAvB,SAA+B2B,EAAE,0BAChCN,GAAY,gDACZC,GAAQA,EAAKiC,SAASC,QAAUlC,EAAKiC,SAASE,KAAI,SAACzB,EAAS0B,GAYzD,OACI,qBAA8B7B,UAAWJ,EAAQsB,MAAjD,SACI,cAAC,IAAD,CACIjB,GAAI,CACA6B,SAAS,IAAD,OAAM3B,EAAQd,IACtBD,MAAO,CACHC,GAAIc,EAAQd,GACZF,WAGRa,UAAWJ,EAAQvB,KARvB,SAUI,cAAC0D,EAAA,EAAD,UACI,sBAAK/B,UAAWJ,EAAQuB,KAAxB,UACI,qBAAKnB,UAAU,UAAf,SACKG,EAAQhC,QAEb,wCACQgC,EAAQG,KAAKC,WADrB,YACmCJ,EAAQG,KAAKE,aAEhD,qBAAKR,UAAWJ,EAAQnB,KAAxB,SA9BO,YAAnB0B,EAAQM,OACD,cAAC,IAAD,IAEY,WAAnBN,EAAQM,OACD,cAAC,IAAD,IAEY,gBAAnBN,EAAQM,OACD,cAAC,IAAD,SADX,YAKA,kBAAqBoB,SA8BtBpC,GAAQA,EAAKiC,SAASC,OAAS,IAC9B,gDASxBH,EAAYZ,YAAc,cAEXY,QCjJAQ,MAXf,WACE,OACI,cAAC,IAAD,CAAQC,SAAS,IAAjB,SACE,gCACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWZ,IACjC,cAAC,IAAD,CAAOU,KAAK,OAAOE,UAAWnD,U,gBCexCc,IACKsC,IAAIC,KACJC,KAAK,CACFC,UA1BU,CACdC,GAAI,CACAC,YAAa,CACT,uBAAwB,uBACxB,KAAQ,OACR,UAAa,YACb,kBAAmB,kBACnB,OAAU,SACV,eAAgB,yBAGxBC,GAAI,CACAD,YAAa,CACT,uBAAwB,2BACxB,KAAQ,cACR,UAAa,cACb,kBAAmB,eACnB,OAAU,SACV,eAAgB,qCASpBE,IAAK,KAELC,cAAc,EAEdC,cAAe,CACXC,aAAa,KAIVhD,EAAf,EAAeA,IChCTZ,EAAS,IAAI6D,eAAa,CAC5B3E,KAAM,IAAI4E,WAAS,CACfC,IAAK,0DAETC,MAAO,IAAIC,kBAGfC,IAASC,OACL,cAAC,iBAAD,CAAgBnE,OAAQA,EAAxB,SACI,cAAC,EAAD,MAEJoE,SAASC,eAAe,W","file":"static/js/main.e5e72db8.chunk.js","sourcesContent":["import React from 'react';\nimport {Card} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {NavLink} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport CardContent from '@material-ui/core/CardContent';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {gql, useQuery} from \"@apollo/client\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\n\nconst useClient1Styles = makeStyles({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    header: {\n        textAlign: 'center'\n    },\n    card: {\n        display: 'flex',\n        width: 500,\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        height: 500,\n        position: 'absolute',\n        top:0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        backgroundColor: 'mediumaquamarine'\n    },\n    title: {\n        fontSize: 25,\n        textAlign: 'center'\n    },\n    link: {\n        marginLeft: '5vw',\n        textDecoration: 'none',\n        color: 'black'\n    },\n    logo: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    text: {\n        fontSize: 14,\n        padding: 5,\n        margin: 5,\n    },\n});\n\nconst useClient2Styles = makeStyles({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    },\n    header: {\n        textAlign: 'center'\n    },\n    card: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: 500,\n        height: 500,\n        position: 'absolute',\n        top:0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        margin: 'auto',\n        backgroundColor: 'indianred'\n    },\n    title: {\n        fontSize: 25,\n        textAlign: 'center'\n    },\n    link: {\n        marginLeft: '5vw',\n        textDecoration: 'none',\n        color: 'black'\n    },\n    logo: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 5,\n    },\n    text: {\n        fontSize: 14,\n        padding: 5,\n        margin: 5,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n})\nexport const query = gql `\n    query getProject($id: String!)\n{\n    project(id: $id) {\n      id,\n      description,\n      status,\n      title,\n      user {\n        first_name\n        last_name\n      },\n      target,\n      collected,\n    } \n}\n`\nconst Project = ({location}) => {\n    const client = location && location.state && location.state.client;\n    const id = location && location.state && location.state.id\n    const {loading, data} = useQuery(query, {variables: {id}});\n\n    const client1Classes = useClient1Styles();\n    const client2Classes = useClient2Styles();\n\n    const classes = client === \"CLIENT1\" ? client1Classes : client2Classes;\n    const { t, i18n } = useTranslation();\n    const logo = () => {\n        if (data.project.status === 'success') {\n            return <CheckIcon fontSize={'large'} />\n        }\n        if (data.project.status === 'failed') {\n            return <CancelIcon fontSize={'large'} />\n        }\n        if (data.project.status === 'in_progress') {\n            return <HourglassEmptyIcon fontSize={'large'} />\n        }\n    }\n    return (\n        <div className={classes.root}>\n            <h1 className={classes.header}>{t('Project Details')}</h1>\n            <NavLink to='/' className={classes.link}>{t('Back To List')}</NavLink>\n            <Card className={classes.card}>\n                {loading && (<p>Loading data...</p>)}\n                {data && data.project && (\n                    <CardContent>\n                        <Typography className={classes.title} >\n                            {data.project.title}\n                        </Typography>\n                        <Typography className={classes.text} >\n                            {`${t('User')}: ${data.project.user.first_name} ${data.project.user.last_name}`}\n                        </Typography>\n\n                        <div className={classes.logo}>\n                            {t('Status')}\n                            {logo()}\n                        </div>\n                        <Typography className={classes.text} >\n                            {`${t('Collected')}: ${data.project.collected} / ${data.project.target} euros`}\n                        </Typography>\n                    </CardContent>\n\n                )}\n            </Card>\n        </div>\n    )\n}\n\nProject.displayName = 'Project';\n\nexport default Project;","import React from 'react';\nimport {gql, useQuery} from '@apollo/client' ;\nimport { useTranslation } from 'react-i18next';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport {Link} from 'react-router-dom';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\n\nconst useClient1Styles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n    list: {\n        margin: '0 auto',\n        width: '20vw'\n    },\n    block: {\n        display: 'block'\n    },\n    title: {\n        textAlign: 'center'\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black'\n    },\n    item: {\n        padding: 15,\n        width: 400,\n        backgroundColor: 'mediumaquamarine',\n        border: 'aquamarine',\n        borderWidth: 0.5,\n        borderColor: '#3f51b5',\n        borderRadius: 4\n    },\n    logo: {\n        textAlign: 'right'\n    }\n}));\n\nconst useClient2Styles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    block: {\n        display: 'inline-block'\n    },\n    list: {\n        textAlign: 'center'\n    },\n    title: {\n        textAlign: 'center'\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black'\n    },\n    item: {\n        padding: 15,\n        width: 400,\n        backgroundColor: 'indianred',\n        border: 'aquamarine',\n        borderWidth: 0.5,\n        borderColor: '#3f51b5',\n        borderRadius: 4\n    },\n    logo: {\n        textAlign: 'right'\n    }\n}));\n\nexport const query = gql `\n{\n    projects {\n        description,\n        image_url,\n        status,\n        target,\n        title,\n        collected,\n        id,\n        user {\n            first_name\n            last_name\n        }\n    }\n}\n`\n\nconst ProjectList = () => {\n    const client = process.env.REACT_APP_CLIENT;\n    const client1Classes = useClient1Styles();\n    const client2Classes = useClient2Styles();\n    const classes = client && client === \"CLIENT1\" ? client1Classes : client2Classes;\n\n    const {loading, data} = useQuery(query)\n\n    const { t, i18n } = useTranslation();\n\n    return (\n        <div className=\"container\">\n            <div className={classes.list}>\n                <h1 className={classes.title}>{t('Miimosa Project List')}</h1>\n                {loading && (<p>Loading data...</p>)}\n                {data && data.projects.length && data.projects.map((project, index) => {\n                    const logo = () => {\n                        if (project.status === 'success') {\n                            return <CheckIcon />\n                        }\n                        if (project.status === 'failed') {\n                            return <CancelIcon />\n                        }\n                        if (project.status === 'in_progress') {\n                            return <HourglassEmptyIcon />\n                        }\n                    }\n                    return (\n                        <div key={`project_${index}`} className={classes.block}>\n                            <Link\n                                to={{\n                                    pathname: `/${project.id}`,\n                                    state: {\n                                        id: project.id,\n                                        client\n                                    }\n                                }}\n                                className={classes.link}\n                            >\n                                <ListItem>\n                                    <div className={classes.item}>\n                                        <div className=\"privacy\">\n                                            {project.title}\n                                        </div>\n                                        <div>\n                                            {`${project.user.first_name} ${project.user.last_name}`}\n                                        </div>\n                                        <div className={classes.logo}>\n                                            {logo()}\n                                        </div>\n                                    </div>\n\n                                </ListItem>\n                            </Link>\n\n                        </div>\n                    )\n                    })}\n                    {(!data || data.projects.length < 1) && (\n                        <div>\n                            No data\n                        </div>\n                    )}\n            </div>\n        </div>\n    )\n}\n\nProjectList.displayName = \"projectList\";\n\nexport default ProjectList;","import React from 'react';\nimport './App.css';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport Project from './components/Project';\nimport ProjectList from './components/ProjectList';\n\nfunction App() {\n  return (\n      <Router basename='/'>\n        <div>\n          <Route path=\"/\" exact component={ProjectList} />\n          <Route path=\"/:id\" component={Project} />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst resources = {\n    en: {\n        translation: {\n            \"Miimosa Project List\": \"Miimosa Project List\",\n            \"User\": \"User\",\n            \"Collected\": \"Collected\",\n            \"Project Details\": \"Project Details\",\n            \"Status\": \"Status\",\n            \"Back To List\": \"Back to project list\"\n        }\n    },\n    fr: {\n        translation: {\n            \"Miimosa Project List\": \"Liste de projets Miimosa\",\n            \"User\": \"Utilisateur\",\n            \"Collected\": \"Collecté\",\n            \"Project Details\": \"Fiche projet\",\n            \"Status\": \"Statut\",\n            \"Back To List\": \"Retour à la liste de projets\"\n        }\n    }\n};\n\ni18n\n    .use(initReactI18next)\n    .init({\n        resources,\n        lng: \"fr\",\n\n        keySeparator: false,\n\n        interpolation: {\n            escapeValue: false\n        }\n    });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './i18n/i18n';\nimport {ApolloClient, HttpLink, InMemoryCache, ApolloProvider} from \"@apollo/client\"\n\nconst client = new ApolloClient({\n    link: new HttpLink({\n        uri: \"https://landing-test-gql-endpoint.miimosa.net/graphql\"\n    }),\n    cache: new InMemoryCache()\n})\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}